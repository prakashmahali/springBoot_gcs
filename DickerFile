FROM openjdk:11-jre-slim

# Install Google Cloud SDK
RUN apt-get update && \
    apt-get install -y gnupg && \
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    apt-get install -y apt-transport-https ca-certificates && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
    apt-get update && apt-get install -y google-cloud-sdk

# Copy the application JAR
COPY target/demo-0.0.1-SNAPSHOT.jar app.jar

# Run the application
ENTRYPOINT ["java", "-jar", "app.jar"]



# Start with the OpenJDK 17 Alpine base image
FROM openjdk:17-alpine3.14

# Install necessary packages
RUN apk update && \
    apk add --no-cache \
    bash \
    curl \
    python3 \
    py3-crcmod \
    gnupg

# Install Google Cloud SDK
ENV CLOUD_SDK_VERSION=400.0.0

RUN curl -o /google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    tar -xzf /google-cloud-sdk.tar.gz -C /opt && \
    rm /google-cloud-sdk.tar.gz && \
    /opt/google-cloud-sdk/install.sh

# Set environment variables for Google Cloud SDK
ENV PATH=$PATH:/opt/google-cloud-sdk/bin

# Verify installation
RUN gcloud --version

# Copy your application code
COPY . /app

# Set the working directory
WORKDIR /app

# Build your application (if needed, for example using Maven or Gradle)
# RUN ./mvnw package

# Specify the command to run your application (update this based on your actual setup)
CMD ["java", "-jar", "your-application.jar"]

