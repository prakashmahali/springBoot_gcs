import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.io.BufferedReader;
import java.io.InputStreamReader;

@Component
public class GcsCopyScheduler {

    private static final String GCS_BUCKET = "your-gcs-bucket";
    private static final String LOCAL_DESTINATION = "/local/destination/path";

    @Scheduled(fixedRate = 21600000) // Run every 6 hours
    public void copyDirectories() {
        String command = String.format("gsutil ls gs://%s/", GCS_BUCKET);
        
        try {
            Process process = Runtime.getRuntime().exec(command);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            
            while ((line = reader.readLine()) != null) {
                String directoryName = line.trim();
                
                // Check if directory name starts with yyyyMMdd and does not end with _done
                if (directoryName.matches("gs://" + GCS_BUCKET + "/\\d{8}/") && !directoryName.endsWith("_done/")) {
                    copyDirectoryToLocal(directoryName);
                }
            }
            
            process.waitFor();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void copyDirectoryToLocal(String gcsDirectory) {
        String command = String.format("gsutil -m cp -r %s %s", gcsDirectory, LOCAL_DESTINATION);

        try {
            Process process = Runtime.getRuntime().exec(command);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;

            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }

            process.waitFor();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
